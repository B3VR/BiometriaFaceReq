import faceRecognizing as faceReq
import tkinter as tk
import os
import cv2
import sys
from PIL import Image, ImageTk
import numpy
 
fileName = os.environ['ALLUSERSPROFILE'] + "\WebcamCap.txt"
cancel = False
 
def zrobZdjecie(event = 0):
    global cancel, button, button1, button2
    cancel = True
 
    button.place_forget()
    button1 = tk.Button(mainWindow, text="Rozpoznaj", command=rozpoznajTwarz)
    button2 = tk.Button(mainWindow, text="Wróć", command=wroc)
    button1.place(anchor=tk.CENTER, relx=0.2, rely=0.9, width=150, height=50)
    button2.place(anchor=tk.CENTER, relx=0.8, rely=0.9, width=150, height=50)
    button1.focus()
 
def rozpoznajTwarz(event = 0):
    img = faceReq.recognizeFace(frame)

    cv2image = cv2.cvtColor(img, cv2.COLOR_BGR2RGBA)
    prevImg = Image.fromarray(cv2image)
    imgtk = ImageTk.PhotoImage(image=prevImg)
    lmain.imgtk = imgtk
    lmain.configure(image=imgtk)

def wroc(event = 0):
    global button1, button2, button, lmain, cancel
 
    cancel = False
 
    button1.place_forget()
    button2.place_forget()
 
    mainWindow.bind('<Return>', zrobZdjecie)
    button.place(bordermode=tk.INSIDE, relx=0.5, rely=0.9, anchor=tk.CENTER, width=300, height=50)
    lmain.after(10, show_frame)
 

 
try:
    f = open(fileName, 'r')
    camIndex = int(f.readline())
except:
    camIndex = 0
 
cap = cv2.VideoCapture(camIndex)
capWidth = cap.get(3)
capHeight = cap.get(4)
 
success, frame = cap.read()
if not success:
    if camIndex == 0:
        print("Error, No webcam found!")
        sys.exit(1)
    else:
        success, frame = cap.read()
        if not success:
            print("Error, No webcam found!")
            sys.exit(1)
 
 
mainWindow = tk.Tk(screenName="Rozpoznaj twarz")
mainWindow.resizable(width=False, height=False)
mainWindow.bind('<Escape>', lambda e: mainWindow.quit())
lmain = tk.Label(mainWindow, compound=tk.CENTER, anchor=tk.CENTER, relief=tk.RAISED)
button = tk.Button(mainWindow, text="Zrób zdjęcie", command=prompt_ok)
 
lmain.pack()
button.place(bordermode=tk.INSIDE, relx=0.5, rely=0.9, anchor=tk.CENTER, width=300, height=50)
button.focus()
 
def show_frame():
    global cancel, prevImg, button, frame

    _, frame = cap.read()
    cv2image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGBA)
 
    prevImg = Image.fromarray(cv2image)
    imgtk = ImageTk.PhotoImage(image=prevImg)
    lmain.imgtk = imgtk
    lmain.configure(image=imgtk)
    if not cancel:
        lmain.after(10, show_frame)
 
show_frame()
faceReq.trainImages()
mainWindow.mainloop()